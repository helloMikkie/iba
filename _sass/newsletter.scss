input[type=text] {
    width: 100%;
    border-radius: 2px; 
    border: 2px solid white;; 
    border-bottom: 2px solid map-get($colors, yellow );
    font-size: 22px;
    padding: 16px 8px 8px 8px; 
    outline: none; 
    margin-bottom: 64px; 
    transition: all 0.2s; 
    &:focus{
        background-color:map-get($colors, yellow ); 
       
    }
    &:hover{
        // border-bottom: 1px solid black; 
        background-color:map-get($colors, yellow );
    }

}


.checkbox-container{
    display: flex; 
    width: 768px; 
    // border: 1px solid red; 
    margin-bottom: 64px; 
}



.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    user-select: none;
    margin-right: 32px; 
  }
  
  .container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    border: 2px solid map-get($colors, yellow );
    border-radius: 100%; 
    background-color:map-get($colors, white );
  }
  
  /* On mouse-over, add a grey background color */
  .container:hover input ~ .checkmark {
    background-color: map-get($colors, yellow );
  }
  
  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    background-color:map-get($colors, yellow );
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
    left: 5px;
    top: 5px;
    width: 12px;
    height: 12px;
    background-color: black; 
    border-radius: 100%; 
  }